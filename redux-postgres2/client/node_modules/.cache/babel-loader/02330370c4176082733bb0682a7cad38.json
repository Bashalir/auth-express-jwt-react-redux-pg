{"ast":null,"code":"import * as types from \"./../constants\";\nexport var getUserAction = function getUserAction() {\n  return function (dispatch) {\n    return fetch(\"/api/check/token\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      dispatch({\n        type: types.LOGIN_REQUEST,\n        payload: json\n      });\n    });\n  };\n};\nexport var postSignUpAction = function postSignUpAction() {\n  return function (dispatch) {\n    return fetch(\"/api/check/token\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      dispatch({\n        type: types.POST_SIGNUP_REQUEST,\n        payload: json\n      });\n    });\n  };\n};\nexport var logginAction = function logginAction(values) {\n  return function (dispatch) {\n    return fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      dispatch(getUserAction());\n    }).catch(function (err) {\n      console.error(err);\n      alert(\"Error logging in please try again\");\n    });\n  };\n};\nexport var signUpAction = function signUpAction(values) {\n  return function (dispatch) {\n    return fetch(\"/api/auth/signup\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      dispatch(postSignUpAction());\n    }).catch(function (err) {\n      console.error(err);\n      alert(\"Error signup\");\n    });\n  };\n};\nexport var logoutAction = function logoutAction() {\n  return function (dispatch) {\n    return fetch(\"/api/auth/logout\").then(function (response) {\n      dispatch({\n        type: types.LOGOUT\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/bashalir/Desktop/Projet/auth-express-jwt-react-redux-pg/redux-postgres2/client/src/actions/index.js"],"names":["types","getUserAction","dispatch","fetch","then","response","json","type","LOGIN_REQUEST","payload","postSignUpAction","POST_SIGNUP_REQUEST","logginAction","values","method","body","JSON","stringify","headers","res","catch","err","console","error","alert","signUpAction","logoutAction","LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAAC,kBAAD,CAAL,CACJC,IADI,CACC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADT,EAEJF,IAFI,CAEC,UAAAE,IAAI,EAAI;AACZJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEP,KAAK,CAACQ,aAAd;AAA6BC,QAAAA,OAAO,EAAEH;AAAtC,OAAD,CAAR;AACD,KAJI,CAAP;AAKD,GAND;AAOD,CARM;AAUP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,SAAO,UAAAR,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAAC,kBAAD,CAAL,CACJC,IADI,CACC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADT,EAEJF,IAFI,CAEC,UAAAE,IAAI,EAAI;AACZJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEP,KAAK,CAACW,mBAAd;AAAmCF,QAAAA,OAAO,EAAEH;AAA5C,OAAD,CAAR;AACD,KAJI,CAAP;AAKD,GAND;AAOD,CARM;AAUP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM,EAAI;AACpC,SAAO,UAAAX,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAAC,iBAAD,EAAoB;AAC9BW,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFwB;AAG9BK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHqB,KAApB,CAAL,CAOJd,IAPI,CAOC,UAAAe,GAAG,EAAI;AACXjB,MAAAA,QAAQ,CAACD,aAAa,EAAd,CAAR;AACD,KATI,EAUJmB,KAVI,CAUE,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD,KAbI,CAAP;AAcD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAZ,MAAM,EAAI;AACpC,SAAO,UAAAX,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAAC,kBAAD,EAAqB;AAC/BW,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFyB;AAG/BK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHsB,KAArB,CAAL,CAOJd,IAPI,CAOC,UAAAe,GAAG,EAAI;AACXjB,MAAAA,QAAQ,CAACQ,gBAAgB,EAAjB,CAAR;AACD,KATI,EAUJU,KAVI,CAUE,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,MAAAA,KAAK,CAAC,cAAD,CAAL;AACD,KAbI,CAAP;AAcD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO,UAAAxB,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAAC,kBAAD,CAAL,CAA0BC,IAA1B,CAA+B,UAAAC,QAAQ,EAAI;AAChDH,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEP,KAAK,CAAC2B;AAAd,OAAD,CAAR;AACD,KAFM,CAAP;AAGD,GAJD;AAKD,CANM","sourcesContent":["import * as types from \"./../constants\";\n\nexport const getUserAction = () => {\n  return dispatch => {\n    return fetch(\"/api/check/token\")\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: types.LOGIN_REQUEST, payload: json });\n      });\n  };\n};\n\nexport const postSignUpAction = () => {\n  return dispatch => {\n    return fetch(\"/api/check/token\")\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: types.POST_SIGNUP_REQUEST, payload: json });\n      });\n  };\n};\n\nexport const logginAction = values => {\n  return dispatch => {\n    return fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        dispatch(getUserAction());\n      })\n      .catch(err => {\n        console.error(err);\n        alert(\"Error logging in please try again\");\n      });\n  };\n};\n\nexport const signUpAction = values => {\n  return dispatch => {\n    return fetch(\"/api/auth/signup\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        dispatch(postSignUpAction());\n      })\n      .catch(err => {\n        console.error(err);\n        alert(\"Error signup\");\n      });\n  };\n};\n\nexport const logoutAction = () => {\n  return dispatch => {\n    return fetch(\"/api/auth/logout\").then(response => {\n      dispatch({ type: types.LOGOUT });\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}